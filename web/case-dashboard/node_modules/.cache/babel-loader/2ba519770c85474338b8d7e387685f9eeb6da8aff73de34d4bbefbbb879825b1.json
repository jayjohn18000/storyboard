{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/shared/components/storyboard/StoryboardEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { Editor } from '@monaco-editor/react';\nimport { DocumentTextIcon, EyeIcon, CodeBracketIcon, CheckCircleIcon, ExclamationTriangleIcon, PlayIcon, PauseIcon, ArrowPathIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoryDocSyntaxHighlighter = ({\n  content\n}) => {\n  // Simple syntax highlighting for StoryDoc format\n  const highlightSyntax = text => {\n    const patterns = [{\n      regex: /@time\\[([^\\]]+)\\]/g,\n      className: 'text-blue-600 font-semibold'\n    }, {\n      regex: /#actor\\[([^\\]]+)\\]/g,\n      className: 'text-green-600 font-semibold'\n    }, {\n      regex: /~action\\[([^\\]]+)\\]/g,\n      className: 'text-purple-600 font-semibold'\n    }, {\n      regex: /\\^evidence\\[([^\\]]+)\\]/g,\n      className: 'text-red-600 font-semibold'\n    }, {\n      regex: /\\/\\*.*?\\*\\//g,\n      className: 'text-gray-500 italic'\n    }, {\n      regex: /\\/\\/.*$/gm,\n      className: 'text-gray-500 italic'\n    }];\n    let highlighted = text;\n    patterns.forEach(({\n      regex,\n      className\n    }) => {\n      highlighted = highlighted.replace(regex, `<span class=\"${className}\">$&</span>`);\n    });\n    return highlighted;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prose prose-sm max-w-none p-4 bg-gray-50 rounded border\",\n    dangerouslySetInnerHTML: {\n      __html: highlightSyntax(content)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = StoryDocSyntaxHighlighter;\nexport const StoryboardEditor = ({\n  initialContent,\n  evidenceList,\n  onContentChange,\n  onValidationChange,\n  onBeatsExtracted\n}) => {\n  _s();\n  var _beats$currentBeat;\n  const [content, setContent] = useState(initialContent);\n  const [viewMode, setViewMode] = useState('split');\n  const [validationErrors, setValidationErrors] = useState([]);\n  const [isValidating, setIsValidating] = useState(false);\n  const [beats, setBeats] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentBeat, setCurrentBeat] = useState(0);\n  const editorRef = useRef(null);\n\n  // Parse StoryDoc content into beats\n  const parseStoryDoc = useCallback(text => {\n    const lines = text.split('\\n');\n    const parsedBeats = [];\n    let currentBeat = {};\n    let beatIndex = 0;\n    for (const line of lines) {\n      const trimmedLine = line.trim();\n      if (trimmedLine.startsWith('@time[')) {\n        // Save previous beat if exists\n        if (currentBeat.description) {\n          parsedBeats.push({\n            id: crypto.randomUUID(),\n            timestamp: currentBeat.timestamp || beatIndex * 5,\n            description: currentBeat.description || '',\n            actors: currentBeat.actors || [],\n            evidenceAnchors: currentBeat.evidenceAnchors || [],\n            confidence: currentBeat.confidence || 0.8,\n            disputed: currentBeat.disputed || false,\n            duration: currentBeat.duration || 3\n          });\n          beatIndex++;\n        }\n\n        // Start new beat\n        const timeMatch = trimmedLine.match(/@time\\[([^\\]]+)\\]/);\n        currentBeat = {\n          timestamp: timeMatch ? parseFloat(timeMatch[1]) : beatIndex * 5,\n          actors: [],\n          evidenceAnchors: [],\n          confidence: 0.8,\n          disputed: false,\n          duration: 3\n        };\n      } else if (trimmedLine.startsWith('#actor[')) {\n        const actorMatch = trimmedLine.match(/#actor\\[([^\\]]+)\\]/);\n        if (actorMatch && currentBeat.actors) {\n          currentBeat.actors.push(actorMatch[1]);\n        }\n      } else if (trimmedLine.startsWith('~action[')) {\n        const actionMatch = trimmedLine.match(/~action\\[([^\\]]+)\\]/);\n        if (actionMatch) {\n          currentBeat.description = actionMatch[1];\n        }\n      } else if (trimmedLine.startsWith('^evidence[')) {\n        const evidenceMatch = trimmedLine.match(/\\^evidence\\[([^\\]]+)\\]/);\n        if (evidenceMatch && currentBeat.evidenceAnchors) {\n          const evidenceRef = evidenceMatch[1];\n          const [evidenceId, timestamp] = evidenceRef.split('@');\n          currentBeat.evidenceAnchors.push({\n            evidenceId,\n            timestamp: timestamp ? parseFloat(timestamp) : undefined,\n            description: `Reference to ${evidenceId}`\n          });\n        }\n      } else if (trimmedLine && !trimmedLine.startsWith('//') && !trimmedLine.startsWith('/*')) {\n        // Regular description line\n        if (currentBeat.description) {\n          currentBeat.description += ' ' + trimmedLine;\n        } else {\n          currentBeat.description = trimmedLine;\n        }\n      }\n    }\n\n    // Add final beat\n    if (currentBeat.description) {\n      parsedBeats.push({\n        id: crypto.randomUUID(),\n        timestamp: currentBeat.timestamp || beatIndex * 5,\n        description: currentBeat.description || '',\n        actors: currentBeat.actors || [],\n        evidenceAnchors: currentBeat.evidenceAnchors || [],\n        confidence: currentBeat.confidence || 0.8,\n        disputed: currentBeat.disputed || false,\n        duration: currentBeat.duration || 3\n      });\n    }\n    return parsedBeats;\n  }, []);\n\n  // Validate StoryDoc content\n  const validateContent = useCallback(async text => {\n    setIsValidating(true);\n    const errors = [];\n    try {\n      // Parse content\n      const parsedBeats = parseStoryDoc(text);\n\n      // Validate syntax\n      const lines = text.split('\\n');\n      lines.forEach((line, index) => {\n        const trimmedLine = line.trim();\n\n        // Check for malformed syntax\n        if (trimmedLine.includes('@time[') && !trimmedLine.match(/@time\\[([^\\]]+)\\]/)) {\n          errors.push(`Line ${index + 1}: Malformed @time syntax`);\n        }\n        if (trimmedLine.includes('#actor[') && !trimmedLine.match(/#actor\\[([^\\]]+)\\]/)) {\n          errors.push(`Line ${index + 1}: Malformed #actor syntax`);\n        }\n        if (trimmedLine.includes('~action[') && !trimmedLine.match(/~action\\[([^\\]]+)\\]/)) {\n          errors.push(`Line ${index + 1}: Malformed ~action syntax`);\n        }\n        if (trimmedLine.includes('^evidence[') && !trimmedLine.match(/\\^evidence\\[([^\\]]+)\\]/)) {\n          errors.push(`Line ${index + 1}: Malformed ^evidence syntax`);\n        }\n      });\n\n      // Validate evidence references\n      parsedBeats.forEach((beat, beatIndex) => {\n        beat.evidenceAnchors.forEach(anchor => {\n          const evidence = evidenceList.find(e => e.id === anchor.evidenceId);\n          if (!evidence) {\n            errors.push(`Beat ${beatIndex + 1}: Evidence ${anchor.evidenceId} not found`);\n          }\n        });\n      });\n\n      // Validate temporal consistency\n      for (let i = 1; i < parsedBeats.length; i++) {\n        if (parsedBeats[i].timestamp < parsedBeats[i - 1].timestamp + parsedBeats[i - 1].duration) {\n          errors.push(`Beat ${i + 1}: Overlaps with previous beat`);\n        }\n      }\n      setBeats(parsedBeats);\n      onBeatsExtracted(parsedBeats);\n    } catch (error) {\n      errors.push(`Parse error: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n    setValidationErrors(errors);\n    onValidationChange(errors.length === 0, errors);\n    setIsValidating(false);\n  }, [parseStoryDoc, evidenceList, onValidationChange, onBeatsExtracted]);\n\n  // Handle content changes\n  const handleContentChange = useCallback(value => {\n    const newContent = value || '';\n    setContent(newContent);\n    onContentChange(newContent);\n\n    // Debounced validation\n    const timeoutId = setTimeout(() => {\n      validateContent(newContent);\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, [onContentChange, validateContent]);\n\n  // Auto-link evidence references\n  const insertEvidenceReference = evidenceId => {\n    if (editorRef.current) {\n      const selection = editorRef.current.getSelection();\n      const evidenceRef = `^evidence[${evidenceId}]`;\n      editorRef.current.executeEdits('insert-evidence', [{\n        range: selection,\n        text: evidenceRef,\n        forceMoveMarkers: true\n      }]);\n    }\n  };\n\n  // Insert template\n  const insertTemplate = () => {\n    const template = `@time[0.0] #actor[John] ~action[enters room] ^evidence[doc-001]\nJohn walks into the courtroom and takes his seat.\n\n@time[5.0] #actor[Judge] ~action[addresses court] ^evidence[audio-001@00:30]\nThe judge calls the court to order and begins the proceedings.\n\n@time[10.0] #actor[Lawyer] ~action[presents evidence] ^evidence[doc-002@page:5]\nThe lawyer presents the key evidence to the jury.`;\n    if (editorRef.current) {\n      editorRef.current.setValue(template);\n    }\n  };\n\n  // Playback simulation\n  useEffect(() => {\n    let interval;\n    if (isPlaying && beats.length > 0) {\n      interval = setInterval(() => {\n        setCurrentBeat(prev => {\n          const nextBeat = prev + 1;\n          if (nextBeat >= beats.length) {\n            setIsPlaying(false);\n            return 0;\n          }\n          return nextBeat;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isPlaying, beats.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-4 bg-gray-50 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(DocumentTextIcon, {\n            className: \"w-5 h-5 text-gray-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium text-gray-800\",\n            children: \"Storyboard Editor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('edit'),\n            className: `px-3 py-1 rounded text-sm ${viewMode === 'edit' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`,\n            children: [/*#__PURE__*/_jsxDEV(CodeBracketIcon, {\n              className: \"w-4 h-4 inline mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), \"Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('preview'),\n            className: `px-3 py-1 rounded text-sm ${viewMode === 'preview' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`,\n            children: [/*#__PURE__*/_jsxDEV(EyeIcon, {\n              className: \"w-4 h-4 inline mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), \"Preview\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('split'),\n            className: `px-3 py-1 rounded text-sm ${viewMode === 'split' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`,\n            children: \"Split\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: insertTemplate,\n          className: \"px-3 py-1 bg-green-500 text-white text-sm rounded hover:bg-green-600\",\n          children: \"Insert Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsPlaying(!isPlaying),\n          className: \"flex items-center space-x-1 px-3 py-1 bg-purple-500 text-white text-sm rounded hover:bg-purple-600\",\n          children: [isPlaying ? /*#__PURE__*/_jsxDEV(PauseIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(PlayIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isPlaying ? 'Pause' : 'Play'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), isValidating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n            className: \"w-4 h-4 animate-spin text-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Validating...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), validationErrors.length === 0 && !isValidating ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1 text-green-600\",\n          children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: \"Valid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this) : validationErrors.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1 text-red-600\",\n          children: [/*#__PURE__*/_jsxDEV(ExclamationTriangleIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: [validationErrors.length, \" errors\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), validationErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-red-50 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium text-red-800 mb-2\",\n        children: \"Validation Errors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-red-700 space-y-1\",\n        children: validationErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u2022 \", error]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex\",\n      children: [(viewMode === 'edit' || viewMode === 'split') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${viewMode === 'split' ? 'w-1/2' : 'w-full'} flex flex-col`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            height: \"100%\",\n            defaultLanguage: \"plaintext\",\n            value: content,\n            onChange: handleContentChange,\n            onMount: editor => {\n              editorRef.current = editor;\n            },\n            options: {\n              minimap: {\n                enabled: false\n              },\n              wordWrap: 'on',\n              lineNumbers: 'on',\n              folding: true,\n              scrollBeyondLastLine: false,\n              automaticLayout: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), (viewMode === 'preview' || viewMode === 'split') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${viewMode === 'split' ? 'w-1/2' : 'w-full'} flex flex-col border-l`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-gray-50 border-b\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-gray-800\",\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-auto\",\n          children: /*#__PURE__*/_jsxDEV(StoryDocSyntaxHighlighter, {\n            content: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-50 border-t\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium text-gray-800 mb-2\",\n        children: \"Insert Evidence Reference:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: evidenceList.map(evidence => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => insertEvidenceReference(evidence.id),\n          className: \"px-3 py-1 bg-blue-100 text-blue-800 text-sm rounded hover:bg-blue-200\",\n          children: [evidence.name, \" (\", evidence.type, \")\"]\n        }, evidence.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), isPlaying && beats.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-purple-50 border-t\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-purple-800\",\n          children: [\"Playing Beat \", currentBeat + 1, \" of \", beats.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 bg-purple-200 rounded-full h-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-purple-500 h-2 rounded-full transition-all duration-300\",\n            style: {\n              width: `${(currentBeat + 1) / beats.length * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-purple-600\",\n          children: [(_beats$currentBeat = beats[currentBeat]) === null || _beats$currentBeat === void 0 ? void 0 : _beats$currentBeat.timestamp.toFixed(1), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryboardEditor, \"6tC6CirkPdTqTSjZ4bv+cSE4ocI=\");\n_c2 = StoryboardEditor;\nexport default StoryboardEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"StoryDocSyntaxHighlighter\");\n$RefreshReg$(_c2, \"StoryboardEditor\");","map":{"version":3,"names":["React","useState","useCallback","useRef","useEffect","Editor","DocumentTextIcon","EyeIcon","CodeBracketIcon","CheckCircleIcon","ExclamationTriangleIcon","PlayIcon","PauseIcon","ArrowPathIcon","jsxDEV","_jsxDEV","StoryDocSyntaxHighlighter","content","highlightSyntax","text","patterns","regex","className","highlighted","forEach","replace","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","StoryboardEditor","initialContent","evidenceList","onContentChange","onValidationChange","onBeatsExtracted","_s","_beats$currentBeat","setContent","viewMode","setViewMode","validationErrors","setValidationErrors","isValidating","setIsValidating","beats","setBeats","isPlaying","setIsPlaying","currentBeat","setCurrentBeat","editorRef","parseStoryDoc","lines","split","parsedBeats","beatIndex","line","trimmedLine","trim","startsWith","description","push","id","crypto","randomUUID","timestamp","actors","evidenceAnchors","confidence","disputed","duration","timeMatch","match","parseFloat","actorMatch","actionMatch","evidenceMatch","evidenceRef","evidenceId","undefined","validateContent","errors","index","includes","beat","anchor","evidence","find","e","i","length","error","Error","message","handleContentChange","value","newContent","timeoutId","setTimeout","clearTimeout","insertEvidenceReference","current","selection","getSelection","executeEdits","range","forceMoveMarkers","insertTemplate","template","setValue","interval","setInterval","prev","nextBeat","clearInterval","children","onClick","map","height","defaultLanguage","onChange","onMount","editor","options","minimap","enabled","wordWrap","lineNumbers","folding","scrollBeyondLastLine","automaticLayout","name","type","style","width","toFixed","_c2","$RefreshReg$"],"sources":["/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/shared/components/storyboard/StoryboardEditor.tsx"],"sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { Editor } from '@monaco-editor/react';\nimport {\n  DocumentTextIcon,\n  EyeIcon,\n  CodeBracketIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  PlayIcon,\n  PauseIcon,\n  ArrowPathIcon\n} from '@heroicons/react/24/outline';\n\ninterface StoryboardBeat {\n  id: string;\n  timestamp: number;\n  description: string;\n  actors: string[];\n  evidenceAnchors: EvidenceAnchor[];\n  confidence: number;\n  disputed: boolean;\n  duration: number;\n}\n\ninterface EvidenceAnchor {\n  evidenceId: string;\n  timestamp?: number;\n  pageNumber?: number;\n  description: string;\n}\n\ninterface StoryboardEditorProps {\n  initialContent: string;\n  evidenceList: Array<{ id: string; name: string; type: string }>;\n  onContentChange: (content: string) => void;\n  onValidationChange: (isValid: boolean, errors: string[]) => void;\n  onBeatsExtracted: (beats: StoryboardBeat[]) => void;\n}\n\nconst StoryDocSyntaxHighlighter: React.FC<{ content: string }> = ({ content }) => {\n  // Simple syntax highlighting for StoryDoc format\n  const highlightSyntax = (text: string) => {\n    const patterns = [\n      { regex: /@time\\[([^\\]]+)\\]/g, className: 'text-blue-600 font-semibold' },\n      { regex: /#actor\\[([^\\]]+)\\]/g, className: 'text-green-600 font-semibold' },\n      { regex: /~action\\[([^\\]]+)\\]/g, className: 'text-purple-600 font-semibold' },\n      { regex: /\\^evidence\\[([^\\]]+)\\]/g, className: 'text-red-600 font-semibold' },\n      { regex: /\\/\\*.*?\\*\\//g, className: 'text-gray-500 italic' },\n      { regex: /\\/\\/.*$/gm, className: 'text-gray-500 italic' }\n    ];\n\n    let highlighted = text;\n    patterns.forEach(({ regex, className }) => {\n      highlighted = highlighted.replace(regex, `<span class=\"${className}\">$&</span>`);\n    });\n\n    return highlighted;\n  };\n\n  return (\n    <div \n      className=\"prose prose-sm max-w-none p-4 bg-gray-50 rounded border\"\n      dangerouslySetInnerHTML={{ __html: highlightSyntax(content) }}\n    />\n  );\n};\n\nexport const StoryboardEditor: React.FC<StoryboardEditorProps> = ({\n  initialContent,\n  evidenceList,\n  onContentChange,\n  onValidationChange,\n  onBeatsExtracted\n}) => {\n  const [content, setContent] = useState(initialContent);\n  const [viewMode, setViewMode] = useState<'edit' | 'preview' | 'split'>('split');\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n  const [isValidating, setIsValidating] = useState(false);\n  const [beats, setBeats] = useState<StoryboardBeat[]>([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentBeat, setCurrentBeat] = useState(0);\n  const editorRef = useRef<any>(null);\n\n  // Parse StoryDoc content into beats\n  const parseStoryDoc = useCallback((text: string): StoryboardBeat[] => {\n    const lines = text.split('\\n');\n    const parsedBeats: StoryboardBeat[] = [];\n    let currentBeat: Partial<StoryboardBeat> = {};\n    let beatIndex = 0;\n\n    for (const line of lines) {\n      const trimmedLine = line.trim();\n      \n      if (trimmedLine.startsWith('@time[')) {\n        // Save previous beat if exists\n        if (currentBeat.description) {\n          parsedBeats.push({\n            id: crypto.randomUUID(),\n            timestamp: currentBeat.timestamp || beatIndex * 5,\n            description: currentBeat.description || '',\n            actors: currentBeat.actors || [],\n            evidenceAnchors: currentBeat.evidenceAnchors || [],\n            confidence: currentBeat.confidence || 0.8,\n            disputed: currentBeat.disputed || false,\n            duration: currentBeat.duration || 3\n          });\n          beatIndex++;\n        }\n        \n        // Start new beat\n        const timeMatch = trimmedLine.match(/@time\\[([^\\]]+)\\]/);\n        currentBeat = {\n          timestamp: timeMatch ? parseFloat(timeMatch[1]) : beatIndex * 5,\n          actors: [],\n          evidenceAnchors: [],\n          confidence: 0.8,\n          disputed: false,\n          duration: 3\n        };\n      } else if (trimmedLine.startsWith('#actor[')) {\n        const actorMatch = trimmedLine.match(/#actor\\[([^\\]]+)\\]/);\n        if (actorMatch && currentBeat.actors) {\n          currentBeat.actors.push(actorMatch[1]);\n        }\n      } else if (trimmedLine.startsWith('~action[')) {\n        const actionMatch = trimmedLine.match(/~action\\[([^\\]]+)\\]/);\n        if (actionMatch) {\n          currentBeat.description = actionMatch[1];\n        }\n      } else if (trimmedLine.startsWith('^evidence[')) {\n        const evidenceMatch = trimmedLine.match(/\\^evidence\\[([^\\]]+)\\]/);\n        if (evidenceMatch && currentBeat.evidenceAnchors) {\n          const evidenceRef = evidenceMatch[1];\n          const [evidenceId, timestamp] = evidenceRef.split('@');\n          \n          currentBeat.evidenceAnchors.push({\n            evidenceId,\n            timestamp: timestamp ? parseFloat(timestamp) : undefined,\n            description: `Reference to ${evidenceId}`\n          });\n        }\n      } else if (trimmedLine && !trimmedLine.startsWith('//') && !trimmedLine.startsWith('/*')) {\n        // Regular description line\n        if (currentBeat.description) {\n          currentBeat.description += ' ' + trimmedLine;\n        } else {\n          currentBeat.description = trimmedLine;\n        }\n      }\n    }\n\n    // Add final beat\n    if (currentBeat.description) {\n      parsedBeats.push({\n        id: crypto.randomUUID(),\n        timestamp: currentBeat.timestamp || beatIndex * 5,\n        description: currentBeat.description || '',\n        actors: currentBeat.actors || [],\n        evidenceAnchors: currentBeat.evidenceAnchors || [],\n        confidence: currentBeat.confidence || 0.8,\n        disputed: currentBeat.disputed || false,\n        duration: currentBeat.duration || 3\n      });\n    }\n\n    return parsedBeats;\n  }, []);\n\n  // Validate StoryDoc content\n  const validateContent = useCallback(async (text: string) => {\n    setIsValidating(true);\n    const errors: string[] = [];\n\n    try {\n      // Parse content\n      const parsedBeats = parseStoryDoc(text);\n\n      // Validate syntax\n      const lines = text.split('\\n');\n      lines.forEach((line, index) => {\n        const trimmedLine = line.trim();\n        \n        // Check for malformed syntax\n        if (trimmedLine.includes('@time[') && !trimmedLine.match(/@time\\[([^\\]]+)\\]/)) {\n          errors.push(`Line ${index + 1}: Malformed @time syntax`);\n        }\n        if (trimmedLine.includes('#actor[') && !trimmedLine.match(/#actor\\[([^\\]]+)\\]/)) {\n          errors.push(`Line ${index + 1}: Malformed #actor syntax`);\n        }\n        if (trimmedLine.includes('~action[') && !trimmedLine.match(/~action\\[([^\\]]+)\\]/)) {\n          errors.push(`Line ${index + 1}: Malformed ~action syntax`);\n        }\n        if (trimmedLine.includes('^evidence[') && !trimmedLine.match(/\\^evidence\\[([^\\]]+)\\]/)) {\n          errors.push(`Line ${index + 1}: Malformed ^evidence syntax`);\n        }\n      });\n\n      // Validate evidence references\n      parsedBeats.forEach((beat, beatIndex) => {\n        beat.evidenceAnchors.forEach(anchor => {\n          const evidence = evidenceList.find(e => e.id === anchor.evidenceId);\n          if (!evidence) {\n            errors.push(`Beat ${beatIndex + 1}: Evidence ${anchor.evidenceId} not found`);\n          }\n        });\n      });\n\n      // Validate temporal consistency\n      for (let i = 1; i < parsedBeats.length; i++) {\n        if (parsedBeats[i].timestamp < parsedBeats[i - 1].timestamp + parsedBeats[i - 1].duration) {\n          errors.push(`Beat ${i + 1}: Overlaps with previous beat`);\n        }\n      }\n\n      setBeats(parsedBeats);\n      onBeatsExtracted(parsedBeats);\n    } catch (error) {\n      errors.push(`Parse error: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n\n    setValidationErrors(errors);\n    onValidationChange(errors.length === 0, errors);\n    setIsValidating(false);\n  }, [parseStoryDoc, evidenceList, onValidationChange, onBeatsExtracted]);\n\n  // Handle content changes\n  const handleContentChange = useCallback((value: string | undefined) => {\n    const newContent = value || '';\n    setContent(newContent);\n    onContentChange(newContent);\n    \n    // Debounced validation\n    const timeoutId = setTimeout(() => {\n      validateContent(newContent);\n    }, 500);\n\n    return () => clearTimeout(timeoutId);\n  }, [onContentChange, validateContent]);\n\n  // Auto-link evidence references\n  const insertEvidenceReference = (evidenceId: string) => {\n    if (editorRef.current) {\n      const selection = editorRef.current.getSelection();\n      const evidenceRef = `^evidence[${evidenceId}]`;\n      editorRef.current.executeEdits('insert-evidence', [{\n        range: selection,\n        text: evidenceRef,\n        forceMoveMarkers: true\n      }]);\n    }\n  };\n\n  // Insert template\n  const insertTemplate = () => {\n    const template = `@time[0.0] #actor[John] ~action[enters room] ^evidence[doc-001]\nJohn walks into the courtroom and takes his seat.\n\n@time[5.0] #actor[Judge] ~action[addresses court] ^evidence[audio-001@00:30]\nThe judge calls the court to order and begins the proceedings.\n\n@time[10.0] #actor[Lawyer] ~action[presents evidence] ^evidence[doc-002@page:5]\nThe lawyer presents the key evidence to the jury.`;\n\n    if (editorRef.current) {\n      editorRef.current.setValue(template);\n    }\n  };\n\n  // Playback simulation\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n    if (isPlaying && beats.length > 0) {\n      interval = setInterval(() => {\n        setCurrentBeat(prev => {\n          const nextBeat = prev + 1;\n          if (nextBeat >= beats.length) {\n            setIsPlaying(false);\n            return 0;\n          }\n          return nextBeat;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isPlaying, beats.length]);\n\n  return (\n    <div className=\"w-full h-full flex flex-col\">\n      {/* Toolbar */}\n      <div className=\"flex items-center justify-between p-4 bg-gray-50 border-b\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <DocumentTextIcon className=\"w-5 h-5 text-gray-600\" />\n            <span className=\"font-medium text-gray-800\">Storyboard Editor</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-1\">\n            <button\n              onClick={() => setViewMode('edit')}\n              className={`px-3 py-1 rounded text-sm ${\n                viewMode === 'edit' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'\n              }`}\n            >\n              <CodeBracketIcon className=\"w-4 h-4 inline mr-1\" />\n              Edit\n            </button>\n            <button\n              onClick={() => setViewMode('preview')}\n              className={`px-3 py-1 rounded text-sm ${\n                viewMode === 'preview' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'\n              }`}\n            >\n              <EyeIcon className=\"w-4 h-4 inline mr-1\" />\n              Preview\n            </button>\n            <button\n              onClick={() => setViewMode('split')}\n              className={`px-3 py-1 rounded text-sm ${\n                viewMode === 'split' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'\n              }`}\n            >\n              Split\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <button\n            onClick={insertTemplate}\n            className=\"px-3 py-1 bg-green-500 text-white text-sm rounded hover:bg-green-600\"\n          >\n            Insert Template\n          </button>\n          \n          <button\n            onClick={() => setIsPlaying(!isPlaying)}\n            className=\"flex items-center space-x-1 px-3 py-1 bg-purple-500 text-white text-sm rounded hover:bg-purple-600\"\n          >\n            {isPlaying ? (\n              <PauseIcon className=\"w-4 h-4\" />\n            ) : (\n              <PlayIcon className=\"w-4 h-4\" />\n            )}\n            <span>{isPlaying ? 'Pause' : 'Play'}</span>\n          </button>\n          \n          {isValidating && (\n            <div className=\"flex items-center space-x-1\">\n              <ArrowPathIcon className=\"w-4 h-4 animate-spin text-blue-500\" />\n              <span className=\"text-sm text-gray-600\">Validating...</span>\n            </div>\n          )}\n          \n          {validationErrors.length === 0 && !isValidating ? (\n            <div className=\"flex items-center space-x-1 text-green-600\">\n              <CheckCircleIcon className=\"w-4 h-4\" />\n              <span className=\"text-sm\">Valid</span>\n            </div>\n          ) : validationErrors.length > 0 ? (\n            <div className=\"flex items-center space-x-1 text-red-600\">\n              <ExclamationTriangleIcon className=\"w-4 h-4\" />\n              <span className=\"text-sm\">{validationErrors.length} errors</span>\n            </div>\n          ) : null}\n        </div>\n      </div>\n\n      {/* Validation Errors */}\n      {validationErrors.length > 0 && (\n        <div className=\"p-4 bg-red-50 border-b\">\n          <h4 className=\"font-medium text-red-800 mb-2\">Validation Errors:</h4>\n          <ul className=\"text-sm text-red-700 space-y-1\">\n            {validationErrors.map((error, index) => (\n              <li key={index}>• {error}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* Editor Content */}\n      <div className=\"flex-1 flex\">\n        {/* Editor */}\n        {(viewMode === 'edit' || viewMode === 'split') && (\n          <div className={`${viewMode === 'split' ? 'w-1/2' : 'w-full'} flex flex-col`}>\n            <div className=\"flex-1\">\n              <Editor\n                height=\"100%\"\n                defaultLanguage=\"plaintext\"\n                value={content}\n                onChange={handleContentChange}\n                onMount={(editor) => {\n                  editorRef.current = editor;\n                }}\n                options={{\n                  minimap: { enabled: false },\n                  wordWrap: 'on',\n                  lineNumbers: 'on',\n                  folding: true,\n                  scrollBeyondLastLine: false,\n                  automaticLayout: true\n                }}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Preview */}\n        {(viewMode === 'preview' || viewMode === 'split') && (\n          <div className={`${viewMode === 'split' ? 'w-1/2' : 'w-full'} flex flex-col border-l`}>\n            <div className=\"p-4 bg-gray-50 border-b\">\n              <h4 className=\"font-medium text-gray-800\">Preview</h4>\n            </div>\n            <div className=\"flex-1 overflow-auto\">\n              <StoryDocSyntaxHighlighter content={content} />\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Evidence Picker */}\n      <div className=\"p-4 bg-gray-50 border-t\">\n        <h4 className=\"font-medium text-gray-800 mb-2\">Insert Evidence Reference:</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          {evidenceList.map(evidence => (\n            <button\n              key={evidence.id}\n              onClick={() => insertEvidenceReference(evidence.id)}\n              className=\"px-3 py-1 bg-blue-100 text-blue-800 text-sm rounded hover:bg-blue-200\"\n            >\n              {evidence.name} ({evidence.type})\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Playback Indicator */}\n      {isPlaying && beats.length > 0 && (\n        <div className=\"p-4 bg-purple-50 border-t\">\n          <div className=\"flex items-center space-x-4\">\n            <span className=\"text-sm font-medium text-purple-800\">\n              Playing Beat {currentBeat + 1} of {beats.length}\n            </span>\n            <div className=\"flex-1 bg-purple-200 rounded-full h-2\">\n              <div \n                className=\"bg-purple-500 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${((currentBeat + 1) / beats.length) * 100}%` }}\n              />\n            </div>\n            <span className=\"text-sm text-purple-600\">\n              {beats[currentBeat]?.timestamp.toFixed(1)}s\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StoryboardEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}