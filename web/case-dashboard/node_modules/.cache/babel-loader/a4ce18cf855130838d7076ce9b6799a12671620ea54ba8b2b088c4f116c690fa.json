{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { casesApi } from './api/casesApi';\nimport { evidenceApi } from './api/evidenceApi';\nimport { storyboardsApi } from './api/storyboardsApi';\nimport { rendersApi } from './api/rendersApi';\nimport { authApi } from './api/authApi';\nimport casesSlice from './slices/casesSlice';\nimport evidenceSlice from './slices/evidenceSlice';\nimport storyboardsSlice from './slices/storyboardsSlice';\nimport rendersSlice from './slices/rendersSlice';\nimport userSlice from './slices/userSlice';\nexport const store = configureStore({\n  reducer: {\n    // API slices\n    [casesApi.reducerPath]: casesApi.reducer,\n    [evidenceApi.reducerPath]: evidenceApi.reducer,\n    [storyboardsApi.reducerPath]: storyboardsApi.reducer,\n    [rendersApi.reducerPath]: rendersApi.reducer,\n    [authApi.reducerPath]: authApi.reducer,\n    // Regular slices\n    cases: casesSlice,\n    evidence: evidenceSlice,\n    storyboards: storyboardsSlice,\n    renders: rendersSlice,\n    user: userSlice\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n      // Ignore RTK Query actions\n      'casesApi/executeQuery/pending', 'casesApi/executeQuery/fulfilled', 'casesApi/executeQuery/rejected', 'evidenceApi/executeQuery/pending', 'evidenceApi/executeQuery/fulfilled', 'evidenceApi/executeQuery/rejected', 'storyboardsApi/executeQuery/pending', 'storyboardsApi/executeQuery/fulfilled', 'storyboardsApi/executeQuery/rejected', 'rendersApi/executeQuery/pending', 'rendersApi/executeQuery/fulfilled', 'rendersApi/executeQuery/rejected', 'authApi/executeQuery/pending', 'authApi/executeQuery/fulfilled', 'authApi/executeQuery/rejected']\n    }\n  }).concat(casesApi.middleware).concat(evidenceApi.middleware).concat(storyboardsApi.middleware).concat(rendersApi.middleware).concat(authApi.middleware)\n});\n\n// Setup RTK Query listeners\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","setupListeners","casesApi","evidenceApi","storyboardsApi","rendersApi","authApi","casesSlice","evidenceSlice","storyboardsSlice","rendersSlice","userSlice","store","reducer","reducerPath","cases","evidence","storyboards","renders","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","dispatch"],"sources":["/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { casesApi } from './api/casesApi';\nimport { evidenceApi } from './api/evidenceApi';\nimport { storyboardsApi } from './api/storyboardsApi';\nimport { rendersApi } from './api/rendersApi';\nimport { authApi } from './api/authApi';\nimport casesSlice from './slices/casesSlice';\nimport evidenceSlice from './slices/evidenceSlice';\nimport storyboardsSlice from './slices/storyboardsSlice';\nimport rendersSlice from './slices/rendersSlice';\nimport userSlice from './slices/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    // API slices\n    [casesApi.reducerPath]: casesApi.reducer,\n    [evidenceApi.reducerPath]: evidenceApi.reducer,\n    [storyboardsApi.reducerPath]: storyboardsApi.reducer,\n    [rendersApi.reducerPath]: rendersApi.reducer,\n    [authApi.reducerPath]: authApi.reducer,\n    \n    // Regular slices\n    cases: casesSlice,\n    evidence: evidenceSlice,\n    storyboards: storyboardsSlice,\n    renders: rendersSlice,\n    user: userSlice,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [\n          // Ignore RTK Query actions\n          'casesApi/executeQuery/pending',\n          'casesApi/executeQuery/fulfilled',\n          'casesApi/executeQuery/rejected',\n          'evidenceApi/executeQuery/pending',\n          'evidenceApi/executeQuery/fulfilled',\n          'evidenceApi/executeQuery/rejected',\n          'storyboardsApi/executeQuery/pending',\n          'storyboardsApi/executeQuery/fulfilled',\n          'storyboardsApi/executeQuery/rejected',\n          'rendersApi/executeQuery/pending',\n          'rendersApi/executeQuery/fulfilled',\n          'rendersApi/executeQuery/rejected',\n          'authApi/executeQuery/pending',\n          'authApi/executeQuery/fulfilled',\n          'authApi/executeQuery/rejected',\n        ],\n      },\n    })\n    .concat(casesApi.middleware)\n    .concat(evidenceApi.middleware)\n    .concat(storyboardsApi.middleware)\n    .concat(rendersApi.middleware)\n    .concat(authApi.middleware),\n});\n\n// Setup RTK Query listeners\nsetupListeners(store.dispatch);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,gBAAgB,MAAM,2BAA2B;AACxD,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,SAAS,MAAM,oBAAoB;AAE1C,OAAO,MAAMC,KAAK,GAAGZ,cAAc,CAAC;EAClCa,OAAO,EAAE;IACP;IACA,CAACX,QAAQ,CAACY,WAAW,GAAGZ,QAAQ,CAACW,OAAO;IACxC,CAACV,WAAW,CAACW,WAAW,GAAGX,WAAW,CAACU,OAAO;IAC9C,CAACT,cAAc,CAACU,WAAW,GAAGV,cAAc,CAACS,OAAO;IACpD,CAACR,UAAU,CAACS,WAAW,GAAGT,UAAU,CAACQ,OAAO;IAC5C,CAACP,OAAO,CAACQ,WAAW,GAAGR,OAAO,CAACO,OAAO;IAEtC;IACAE,KAAK,EAAER,UAAU;IACjBS,QAAQ,EAAER,aAAa;IACvBS,WAAW,EAAER,gBAAgB;IAC7BS,OAAO,EAAER,YAAY;IACrBS,IAAI,EAAER;EACR,CAAC;EACDS,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE;MACd;MACA,+BAA+B,EAC/B,iCAAiC,EACjC,gCAAgC,EAChC,kCAAkC,EAClC,oCAAoC,EACpC,mCAAmC,EACnC,qCAAqC,EACrC,uCAAuC,EACvC,sCAAsC,EACtC,iCAAiC,EACjC,mCAAmC,EACnC,kCAAkC,EAClC,8BAA8B,EAC9B,gCAAgC,EAChC,+BAA+B;IAEnC;EACF,CAAC,CAAC,CACDC,MAAM,CAACtB,QAAQ,CAACkB,UAAU,CAAC,CAC3BI,MAAM,CAACrB,WAAW,CAACiB,UAAU,CAAC,CAC9BI,MAAM,CAACpB,cAAc,CAACgB,UAAU,CAAC,CACjCI,MAAM,CAACnB,UAAU,CAACe,UAAU,CAAC,CAC7BI,MAAM,CAAClB,OAAO,CAACc,UAAU;AAC9B,CAAC,CAAC;;AAEF;AACAnB,cAAc,CAACW,KAAK,CAACa,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}