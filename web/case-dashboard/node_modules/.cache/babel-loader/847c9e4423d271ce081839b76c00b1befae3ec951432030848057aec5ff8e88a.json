{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  selectedCaseId: null,\n  filters: {\n    status: 'all',\n    mode: 'all',\n    jurisdiction: 'all'\n  },\n  searchTerm: '',\n  sortBy: 'updatedAt',\n  sortOrder: 'desc'\n};\nconst casesSlice = createSlice({\n  name: 'cases',\n  initialState,\n  reducers: {\n    setSelectedCase: (state, action) => {\n      state.selectedCaseId = action.payload;\n    },\n    setFilters: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    setSearchTerm: (state, action) => {\n      state.searchTerm = action.payload;\n    },\n    setSorting: (state, action) => {\n      state.sortBy = action.payload.sortBy;\n      state.sortOrder = action.payload.sortOrder;\n    },\n    clearFilters: state => {\n      state.filters = {\n        status: 'all',\n        mode: 'all',\n        jurisdiction: 'all'\n      };\n      state.searchTerm = '';\n    }\n  }\n});\nexport const {\n  setSelectedCase,\n  setFilters,\n  setSearchTerm,\n  setSorting,\n  clearFilters\n} = casesSlice.actions;\nexport default casesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","selectedCaseId","filters","status","mode","jurisdiction","searchTerm","sortBy","sortOrder","casesSlice","name","reducers","setSelectedCase","state","action","payload","setFilters","setSearchTerm","setSorting","clearFilters","actions","reducer"],"sources":["/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/store/slices/casesSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Case } from '../api/casesApi';\n\ninterface CasesState {\n  selectedCaseId: string | null;\n  filters: {\n    status: string;\n    mode: string;\n    jurisdiction: string;\n  };\n  searchTerm: string;\n  sortBy: 'createdAt' | 'updatedAt' | 'title';\n  sortOrder: 'asc' | 'desc';\n}\n\nconst initialState: CasesState = {\n  selectedCaseId: null,\n  filters: {\n    status: 'all',\n    mode: 'all',\n    jurisdiction: 'all',\n  },\n  searchTerm: '',\n  sortBy: 'updatedAt',\n  sortOrder: 'desc',\n};\n\nconst casesSlice = createSlice({\n  name: 'cases',\n  initialState,\n  reducers: {\n    setSelectedCase: (state, action: PayloadAction<string | null>) => {\n      state.selectedCaseId = action.payload;\n    },\n    setFilters: (state, action: PayloadAction<Partial<CasesState['filters']>>) => {\n      state.filters = { ...state.filters, ...action.payload };\n    },\n    setSearchTerm: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n    },\n    setSorting: (state, action: PayloadAction<{ sortBy: CasesState['sortBy']; sortOrder: CasesState['sortOrder'] }>) => {\n      state.sortBy = action.payload.sortBy;\n      state.sortOrder = action.payload.sortOrder;\n    },\n    clearFilters: (state) => {\n      state.filters = {\n        status: 'all',\n        mode: 'all',\n        jurisdiction: 'all',\n      };\n      state.searchTerm = '';\n    },\n  },\n});\n\nexport const {\n  setSelectedCase,\n  setFilters,\n  setSearchTerm,\n  setSorting,\n  clearFilters,\n} = casesSlice.actions;\n\nexport default casesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAe7D,MAAMC,YAAwB,GAAG;EAC/BC,cAAc,EAAE,IAAI;EACpBC,OAAO,EAAE;IACPC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,KAAK;IACXC,YAAY,EAAE;EAChB,CAAC;EACDC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE,WAAW;EACnBC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,UAAU,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,OAAO;EACbV,YAAY;EACZW,QAAQ,EAAE;IACRC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAoC,KAAK;MAChED,KAAK,CAACZ,cAAc,GAAGa,MAAM,CAACC,OAAO;IACvC,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAqD,KAAK;MAC5ED,KAAK,CAACX,OAAO,GAAG;QAAE,GAAGW,KAAK,CAACX,OAAO;QAAE,GAAGY,MAAM,CAACC;MAAQ,CAAC;IACzD,CAAC;IACDE,aAAa,EAAEA,CAACJ,KAAK,EAAEC,MAA6B,KAAK;MACvDD,KAAK,CAACP,UAAU,GAAGQ,MAAM,CAACC,OAAO;IACnC,CAAC;IACDG,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAA2F,KAAK;MAClHD,KAAK,CAACN,MAAM,GAAGO,MAAM,CAACC,OAAO,CAACR,MAAM;MACpCM,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO,CAACP,SAAS;IAC5C,CAAC;IACDW,YAAY,EAAGN,KAAK,IAAK;MACvBA,KAAK,CAACX,OAAO,GAAG;QACdC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAE,KAAK;QACXC,YAAY,EAAE;MAChB,CAAC;MACDQ,KAAK,CAACP,UAAU,GAAG,EAAE;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXM,eAAe;EACfI,UAAU;EACVC,aAAa;EACbC,UAAU;EACVC;AACF,CAAC,GAAGV,UAAU,CAACW,OAAO;AAEtB,eAAeX,UAAU,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}