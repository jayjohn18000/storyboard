{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport const rendersApi = createApi({\n  reducerPath: 'rendersApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${API_BASE_URL}/api/v1/renders`,\n    prepareHeaders: headers => {\n      const token = localStorage.getItem('legal-sim-token');\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    }\n  }),\n  tagTypes: ['Render'],\n  endpoints: builder => ({\n    getRenders: builder.query({\n      query: ({\n        caseId,\n        skip = 0,\n        limit = 100,\n        statusFilter\n      }) => {\n        const params = new URLSearchParams();\n        if (caseId) params.append('case_id_filter', caseId);\n        if (skip) params.append('skip', skip.toString());\n        if (limit) params.append('limit', limit.toString());\n        if (statusFilter) params.append('status_filter', statusFilter);\n        return `?${params.toString()}`;\n      },\n      providesTags: ['Render'],\n      transformResponse: response => {\n        return response.map(render => {\n          var _render$status, _render$quality;\n          return {\n            id: render.id,\n            timeline_id: render.timeline_id,\n            storyboard_id: render.storyboard_id,\n            case_id: render.case_id,\n            status: ((_render$status = render.status) === null || _render$status === void 0 ? void 0 : _render$status.toLowerCase()) || 'queued',\n            priority: render.priority || 0,\n            created_by: render.created_by,\n            created_at: render.created_at,\n            started_at: render.started_at,\n            completed_at: render.completed_at,\n            width: render.width || 1920,\n            height: render.height || 1080,\n            fps: render.fps || 30,\n            quality: ((_render$quality = render.quality) === null || _render$quality === void 0 ? void 0 : _render$quality.toLowerCase()) || 'standard',\n            profile: render.profile || 'neutral',\n            deterministic: render.deterministic || true,\n            seed: render.seed,\n            output_format: render.output_format || 'mp4',\n            output_path: render.output_path || '',\n            file_size_bytes: render.file_size_bytes || 0,\n            duration_seconds: render.duration_seconds || 0,\n            render_time_seconds: render.render_time_seconds || 0,\n            frames_rendered: render.frames_rendered || 0,\n            total_frames: render.total_frames || 0,\n            progress_percentage: render.progress_percentage || 0,\n            error_message: render.error_message || '',\n            retry_count: render.retry_count || 0,\n            max_retries: render.max_retries || 3,\n            checksum: render.checksum || '',\n            golden_frame_checksums: render.golden_frame_checksums || []\n          };\n        });\n      }\n    }),\n    getRender: builder.query({\n      query: id => `/${id}`,\n      providesTags: (result, error, id) => [{\n        type: 'Render',\n        id\n      }]\n    }),\n    getCaseRenders: builder.query({\n      query: caseId => `/cases/${caseId}/renders`,\n      providesTags: (result, error, caseId) => [{\n        type: 'Render',\n        id: `case-${caseId}`\n      }]\n    }),\n    createRender: builder.mutation({\n      query: newRender => ({\n        url: '',\n        method: 'POST',\n        body: newRender\n      }),\n      invalidatesTags: ['Render']\n    }),\n    updateRender: builder.mutation({\n      query: ({\n        id,\n        priority\n      }) => ({\n        url: `/${id}`,\n        method: 'PUT',\n        body: {\n          priority\n        }\n      }),\n      invalidatesTags: (result, error, {\n        id\n      }) => [{\n        type: 'Render',\n        id\n      }]\n    }),\n    cancelRender: builder.mutation({\n      query: id => ({\n        url: `/${id}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: (result, error, id) => [{\n        type: 'Render',\n        id\n      }]\n    }),\n    retryRender: builder.mutation({\n      query: id => ({\n        url: `/${id}/retry`,\n        method: 'POST'\n      }),\n      invalidatesTags: (result, error, id) => [{\n        type: 'Render',\n        id\n      }]\n    }),\n    downloadRender: builder.query({\n      query: id => ({\n        url: `/${id}/download`,\n        method: 'GET',\n        responseHandler: response => response.blob()\n      })\n    }),\n    getRenderStatus: builder.query({\n      query: id => `/${id}/status`,\n      providesTags: (result, error, id) => [{\n        type: 'Render',\n        id\n      }]\n    }),\n    getQueueStats: builder.query({\n      query: () => '/queue/stats',\n      providesTags: ['Render']\n    })\n  })\n});\nexport const {\n  useGetRendersQuery,\n  useGetRenderQuery,\n  useGetCaseRendersQuery,\n  useCreateRenderMutation,\n  useUpdateRenderMutation,\n  useCancelRenderMutation,\n  useRetryRenderMutation,\n  useDownloadRenderQuery,\n  useGetRenderStatusQuery,\n  useGetQueueStatsQuery\n} = rendersApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","API_BASE_URL","process","env","REACT_APP_API_URL","rendersApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","token","localStorage","getItem","set","tagTypes","endpoints","builder","getRenders","query","caseId","skip","limit","statusFilter","params","URLSearchParams","append","toString","providesTags","transformResponse","response","map","render","_render$status","_render$quality","id","timeline_id","storyboard_id","case_id","status","toLowerCase","priority","created_by","created_at","started_at","completed_at","width","height","fps","quality","profile","deterministic","seed","output_format","output_path","file_size_bytes","duration_seconds","render_time_seconds","frames_rendered","total_frames","progress_percentage","error_message","retry_count","max_retries","checksum","golden_frame_checksums","getRender","result","error","type","getCaseRenders","createRender","mutation","newRender","url","method","body","invalidatesTags","updateRender","cancelRender","retryRender","downloadRender","responseHandler","blob","getRenderStatus","getQueueStats","useGetRendersQuery","useGetRenderQuery","useGetCaseRendersQuery","useCreateRenderMutation","useUpdateRenderMutation","useCancelRenderMutation","useRetryRenderMutation","useDownloadRenderQuery","useGetRenderStatusQuery","useGetQueueStatsQuery"],"sources":["/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/store/api/rendersApi.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport interface RenderJob {\n  id: string;\n  timeline_id: string;\n  storyboard_id: string;\n  case_id: string;\n  status: 'queued' | 'processing' | 'completed' | 'failed' | 'cancelled';\n  priority: number;\n  created_by: string;\n  created_at: string;\n  started_at?: string;\n  completed_at?: string;\n  width: number;\n  height: number;\n  fps: number;\n  quality: 'draft' | 'standard' | 'high' | 'ultra';\n  profile: 'neutral' | 'cinematic';\n  deterministic: boolean;\n  seed?: number;\n  output_format: string;\n  output_path: string;\n  file_size_bytes: number;\n  duration_seconds: number;\n  render_time_seconds: number;\n  frames_rendered: number;\n  total_frames: number;\n  progress_percentage: number;\n  error_message: string;\n  retry_count: number;\n  max_retries: number;\n  checksum: string;\n  golden_frame_checksums: string[];\n}\n\nexport interface CreateRenderRequest {\n  timeline_id: string;\n  storyboard_id: string;\n  case_id: string;\n  width?: number;\n  height?: number;\n  fps?: number;\n  quality?: 'draft' | 'standard' | 'high' | 'ultra';\n  profile?: 'neutral' | 'cinematic';\n  deterministic?: boolean;\n  seed?: number;\n  output_format?: string;\n  priority?: number;\n}\n\nexport interface RenderConfig {\n  resolution: '720p' | '1080p' | '4k';\n  frameRate: 24 | 30 | 60;\n  quality: 'draft' | 'standard' | 'high';\n  effects: boolean;\n  audio: boolean;\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nexport const rendersApi = createApi({\n  reducerPath: 'rendersApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${API_BASE_URL}/api/v1/renders`,\n    prepareHeaders: (headers) => {\n      const token = localStorage.getItem('legal-sim-token');\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  tagTypes: ['Render'],\n  endpoints: (builder) => ({\n    getRenders: builder.query<RenderJob[], { caseId?: string; skip?: number; limit?: number; statusFilter?: string }>({\n      query: ({ caseId, skip = 0, limit = 100, statusFilter }) => {\n        const params = new URLSearchParams();\n        if (caseId) params.append('case_id_filter', caseId);\n        if (skip) params.append('skip', skip.toString());\n        if (limit) params.append('limit', limit.toString());\n        if (statusFilter) params.append('status_filter', statusFilter);\n        return `?${params.toString()}`;\n      },\n      providesTags: ['Render'],\n      transformResponse: (response: any[]) => {\n        return response.map(render => ({\n          id: render.id,\n          timeline_id: render.timeline_id,\n          storyboard_id: render.storyboard_id,\n          case_id: render.case_id,\n          status: render.status?.toLowerCase() || 'queued',\n          priority: render.priority || 0,\n          created_by: render.created_by,\n          created_at: render.created_at,\n          started_at: render.started_at,\n          completed_at: render.completed_at,\n          width: render.width || 1920,\n          height: render.height || 1080,\n          fps: render.fps || 30,\n          quality: render.quality?.toLowerCase() || 'standard',\n          profile: render.profile || 'neutral',\n          deterministic: render.deterministic || true,\n          seed: render.seed,\n          output_format: render.output_format || 'mp4',\n          output_path: render.output_path || '',\n          file_size_bytes: render.file_size_bytes || 0,\n          duration_seconds: render.duration_seconds || 0,\n          render_time_seconds: render.render_time_seconds || 0,\n          frames_rendered: render.frames_rendered || 0,\n          total_frames: render.total_frames || 0,\n          progress_percentage: render.progress_percentage || 0,\n          error_message: render.error_message || '',\n          retry_count: render.retry_count || 0,\n          max_retries: render.max_retries || 3,\n          checksum: render.checksum || '',\n          golden_frame_checksums: render.golden_frame_checksums || [],\n        }));\n      },\n    }),\n    getRender: builder.query<RenderJob, string>({\n      query: (id) => `/${id}`,\n      providesTags: (result, error, id) => [{ type: 'Render', id }],\n    }),\n    getCaseRenders: builder.query<RenderJob[], string>({\n      query: (caseId) => `/cases/${caseId}/renders`,\n      providesTags: (result, error, caseId) => [{ type: 'Render', id: `case-${caseId}` }],\n    }),\n    createRender: builder.mutation<RenderJob, CreateRenderRequest>({\n      query: (newRender) => ({\n        url: '',\n        method: 'POST',\n        body: newRender,\n      }),\n      invalidatesTags: ['Render'],\n    }),\n    updateRender: builder.mutation<RenderJob, { id: string; priority?: number }>({\n      query: ({ id, priority }) => ({\n        url: `/${id}`,\n        method: 'PUT',\n        body: { priority },\n      }),\n      invalidatesTags: (result, error, { id }) => [{ type: 'Render', id }],\n    }),\n    cancelRender: builder.mutation<void, string>({\n      query: (id) => ({\n        url: `/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: (result, error, id) => [{ type: 'Render', id }],\n    }),\n    retryRender: builder.mutation<RenderJob, string>({\n      query: (id) => ({\n        url: `/${id}/retry`,\n        method: 'POST',\n      }),\n      invalidatesTags: (result, error, id) => [{ type: 'Render', id }],\n    }),\n    downloadRender: builder.query<Blob, string>({\n      query: (id) => ({\n        url: `/${id}/download`,\n        method: 'GET',\n        responseHandler: (response) => response.blob(),\n      }),\n    }),\n    getRenderStatus: builder.query<{\n      status: string;\n      progress_percentage: number;\n      frames_rendered: number;\n      total_frames: number;\n      error_message: string;\n      render_time_seconds: number;\n    }, string>({\n      query: (id) => `/${id}/status`,\n      providesTags: (result, error, id) => [{ type: 'Render', id }],\n    }),\n    getQueueStats: builder.query<{\n      total_jobs: number;\n      queued: number;\n      processing: number;\n      completed: number;\n      failed: number;\n      cancelled: number;\n    }, void>({\n      query: () => '/queue/stats',\n      providesTags: ['Render'],\n    }),\n  }),\n});\n\nexport const {\n  useGetRendersQuery,\n  useGetRenderQuery,\n  useGetCaseRendersQuery,\n  useCreateRenderMutation,\n  useUpdateRenderMutation,\n  useCancelRenderMutation,\n  useRetryRenderMutation,\n  useDownloadRenderQuery,\n  useGetRenderStatusQuery,\n  useGetQueueStatsQuery,\n} = rendersApi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}