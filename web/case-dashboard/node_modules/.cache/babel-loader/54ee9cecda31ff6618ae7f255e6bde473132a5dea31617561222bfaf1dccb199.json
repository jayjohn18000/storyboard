{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  currentUser: null,\n  token: null,\n  isAuthenticated: false,\n  preferences: {\n    theme: 'light',\n    fontSize: 'medium',\n    density: 'comfortable',\n    autoSave: true,\n    notifications: {\n      renderCompletion: true,\n      evidenceProcessing: true,\n      validationErrors: true,\n      emailNotifications: true\n    }\n  },\n  lastActivity: null\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.currentUser = action.payload;\n      state.isAuthenticated = true;\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n    },\n    setAuthenticated: (state, action) => {\n      state.isAuthenticated = action.payload;\n      if (!action.payload) {\n        state.currentUser = null;\n        state.token = null;\n      }\n    },\n    updatePreferences: (state, action) => {\n      state.preferences = {\n        ...state.preferences,\n        ...action.payload\n      };\n    },\n    updateNotificationPreferences: (state, action) => {\n      state.preferences.notifications = {\n        ...state.preferences.notifications,\n        ...action.payload\n      };\n    },\n    setLastActivity: (state, action) => {\n      state.lastActivity = action.payload;\n    },\n    logout: state => {\n      state.currentUser = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.lastActivity = null;\n    }\n  }\n});\nexport const {\n  setUser,\n  setToken,\n  setAuthenticated,\n  updatePreferences,\n  updateNotificationPreferences,\n  setLastActivity,\n  logout\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentUser","token","isAuthenticated","preferences","theme","fontSize","density","autoSave","notifications","renderCompletion","evidenceProcessing","validationErrors","emailNotifications","lastActivity","userSlice","name","reducers","setUser","state","action","payload","setToken","setAuthenticated","updatePreferences","updateNotificationPreferences","setLastActivity","logout","actions","reducer"],"sources":["/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/store/slices/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { User } from '../api/authApi';\n\ninterface UserState {\n  currentUser: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  preferences: {\n    theme: 'light' | 'dark' | 'auto';\n    fontSize: 'small' | 'medium' | 'large';\n    density: 'compact' | 'comfortable' | 'spacious';\n    autoSave: boolean;\n    notifications: {\n      renderCompletion: boolean;\n      evidenceProcessing: boolean;\n      validationErrors: boolean;\n      emailNotifications: boolean;\n    };\n  };\n  lastActivity: string | null;\n}\n\nconst initialState: UserState = {\n  currentUser: null,\n  token: null,\n  isAuthenticated: false,\n  preferences: {\n    theme: 'light',\n    fontSize: 'medium',\n    density: 'comfortable',\n    autoSave: true,\n    notifications: {\n      renderCompletion: true,\n      evidenceProcessing: true,\n      validationErrors: true,\n      emailNotifications: true,\n    },\n  },\n  lastActivity: null,\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, action: PayloadAction<User>) => {\n      state.currentUser = action.payload;\n      state.isAuthenticated = true;\n    },\n    setToken: (state, action: PayloadAction<string>) => {\n      state.token = action.payload;\n    },\n    setAuthenticated: (state, action: PayloadAction<boolean>) => {\n      state.isAuthenticated = action.payload;\n      if (!action.payload) {\n        state.currentUser = null;\n        state.token = null;\n      }\n    },\n    updatePreferences: (state, action: PayloadAction<Partial<UserState['preferences']>>) => {\n      state.preferences = { ...state.preferences, ...action.payload };\n    },\n    updateNotificationPreferences: (state, action: PayloadAction<Partial<UserState['preferences']['notifications']>>) => {\n      state.preferences.notifications = { ...state.preferences.notifications, ...action.payload };\n    },\n    setLastActivity: (state, action: PayloadAction<string>) => {\n      state.lastActivity = action.payload;\n    },\n    logout: (state) => {\n      state.currentUser = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.lastActivity = null;\n    },\n  },\n});\n\nexport const {\n  setUser,\n  setToken,\n  setAuthenticated,\n  updatePreferences,\n  updateNotificationPreferences,\n  setLastActivity,\n  logout,\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAsB7D,MAAMC,YAAuB,GAAG;EAC9BC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE,KAAK;EACtBC,WAAW,EAAE;IACXC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,QAAQ;IAClBC,OAAO,EAAE,aAAa;IACtBC,QAAQ,EAAE,IAAI;IACdC,aAAa,EAAE;MACbC,gBAAgB,EAAE,IAAI;MACtBC,kBAAkB,EAAE,IAAI;MACxBC,gBAAgB,EAAE,IAAI;MACtBC,kBAAkB,EAAE;IACtB;EACF,CAAC;EACDC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC5BiB,IAAI,EAAE,MAAM;EACZhB,YAAY;EACZiB,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA2B,KAAK;MAC/CD,KAAK,CAAClB,WAAW,GAAGmB,MAAM,CAACC,OAAO;MAClCF,KAAK,CAAChB,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDmB,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAA6B,KAAK;MAClDD,KAAK,CAACjB,KAAK,GAAGkB,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,gBAAgB,EAAEA,CAACJ,KAAK,EAAEC,MAA8B,KAAK;MAC3DD,KAAK,CAAChB,eAAe,GAAGiB,MAAM,CAACC,OAAO;MACtC,IAAI,CAACD,MAAM,CAACC,OAAO,EAAE;QACnBF,KAAK,CAAClB,WAAW,GAAG,IAAI;QACxBkB,KAAK,CAACjB,KAAK,GAAG,IAAI;MACpB;IACF,CAAC;IACDsB,iBAAiB,EAAEA,CAACL,KAAK,EAAEC,MAAwD,KAAK;MACtFD,KAAK,CAACf,WAAW,GAAG;QAAE,GAAGe,KAAK,CAACf,WAAW;QAAE,GAAGgB,MAAM,CAACC;MAAQ,CAAC;IACjE,CAAC;IACDI,6BAA6B,EAAEA,CAACN,KAAK,EAAEC,MAAyE,KAAK;MACnHD,KAAK,CAACf,WAAW,CAACK,aAAa,GAAG;QAAE,GAAGU,KAAK,CAACf,WAAW,CAACK,aAAa;QAAE,GAAGW,MAAM,CAACC;MAAQ,CAAC;IAC7F,CAAC;IACDK,eAAe,EAAEA,CAACP,KAAK,EAAEC,MAA6B,KAAK;MACzDD,KAAK,CAACL,YAAY,GAAGM,MAAM,CAACC,OAAO;IACrC,CAAC;IACDM,MAAM,EAAGR,KAAK,IAAK;MACjBA,KAAK,CAAClB,WAAW,GAAG,IAAI;MACxBkB,KAAK,CAACjB,KAAK,GAAG,IAAI;MAClBiB,KAAK,CAAChB,eAAe,GAAG,KAAK;MAC7BgB,KAAK,CAACL,YAAY,GAAG,IAAI;IAC3B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXI,OAAO;EACPI,QAAQ;EACRC,gBAAgB;EAChBC,iBAAiB;EACjBC,6BAA6B;EAC7BC,eAAe;EACfC;AACF,CAAC,GAAGZ,SAAS,CAACa,OAAO;AAErB,eAAeb,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}