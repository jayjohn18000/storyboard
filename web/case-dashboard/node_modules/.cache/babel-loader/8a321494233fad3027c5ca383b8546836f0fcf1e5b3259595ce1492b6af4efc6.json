{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/components/docs/DocStatusBadge.tsx\";\nimport React from 'react';\nimport { CheckCircleIcon, ExclamationTriangleIcon, ClockIcon, ArrowPathIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DocStatusBadge = ({\n  status,\n  className = ''\n}) => {\n  const getStatusConfig = status => {\n    switch (status) {\n      case 'UPLOADING':\n        return {\n          icon: ArrowPathIcon,\n          text: 'Uploading',\n          bgColor: 'bg-blue-100',\n          textColor: 'text-blue-800',\n          iconColor: 'text-blue-600',\n          animate: true\n        };\n      case 'PARSING':\n        return {\n          icon: ArrowPathIcon,\n          text: 'Parsing',\n          bgColor: 'bg-yellow-100',\n          textColor: 'text-yellow-800',\n          iconColor: 'text-yellow-600',\n          animate: true\n        };\n      case 'EMBEDDING':\n        return {\n          icon: ArrowPathIcon,\n          text: 'Embedding',\n          bgColor: 'bg-purple-100',\n          textColor: 'text-purple-800',\n          iconColor: 'text-purple-600',\n          animate: true\n        };\n      case 'INDEXED':\n        return {\n          icon: CheckCircleIcon,\n          text: 'Indexed',\n          bgColor: 'bg-green-100',\n          textColor: 'text-green-800',\n          iconColor: 'text-green-600',\n          animate: false\n        };\n      case 'ERROR':\n        return {\n          icon: ExclamationTriangleIcon,\n          text: 'Error',\n          bgColor: 'bg-red-100',\n          textColor: 'text-red-800',\n          iconColor: 'text-red-600',\n          animate: false\n        };\n      default:\n        return {\n          icon: ClockIcon,\n          text: 'Unknown',\n          bgColor: 'bg-gray-100',\n          textColor: 'text-gray-800',\n          iconColor: 'text-gray-600',\n          animate: false\n        };\n    }\n  };\n  const config = getStatusConfig(status);\n  const IconComponent = config.icon;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.bgColor} ${config.textColor} ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(IconComponent, {\n      className: `w-3 h-3 mr-1 ${config.iconColor} ${config.animate ? 'animate-spin' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), config.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c = DocStatusBadge;\nexport default DocStatusBadge;\nvar _c;\n$RefreshReg$(_c, \"DocStatusBadge\");","map":{"version":3,"names":["React","CheckCircleIcon","ExclamationTriangleIcon","ClockIcon","ArrowPathIcon","jsxDEV","_jsxDEV","DocStatusBadge","status","className","getStatusConfig","icon","text","bgColor","textColor","iconColor","animate","config","IconComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/components/docs/DocStatusBadge.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  ArrowPathIcon\n} from '@heroicons/react/24/outline';\n\nexport type DocStatus = 'UPLOADING' | 'PARSING' | 'EMBEDDING' | 'INDEXED' | 'ERROR';\n\ninterface DocStatusBadgeProps {\n  status: DocStatus;\n  className?: string;\n}\n\nexport const DocStatusBadge: React.FC<DocStatusBadgeProps> = ({ status, className = '' }) => {\n  const getStatusConfig = (status: DocStatus) => {\n    switch (status) {\n      case 'UPLOADING':\n        return {\n          icon: ArrowPathIcon,\n          text: 'Uploading',\n          bgColor: 'bg-blue-100',\n          textColor: 'text-blue-800',\n          iconColor: 'text-blue-600',\n          animate: true\n        };\n      case 'PARSING':\n        return {\n          icon: ArrowPathIcon,\n          text: 'Parsing',\n          bgColor: 'bg-yellow-100',\n          textColor: 'text-yellow-800',\n          iconColor: 'text-yellow-600',\n          animate: true\n        };\n      case 'EMBEDDING':\n        return {\n          icon: ArrowPathIcon,\n          text: 'Embedding',\n          bgColor: 'bg-purple-100',\n          textColor: 'text-purple-800',\n          iconColor: 'text-purple-600',\n          animate: true\n        };\n      case 'INDEXED':\n        return {\n          icon: CheckCircleIcon,\n          text: 'Indexed',\n          bgColor: 'bg-green-100',\n          textColor: 'text-green-800',\n          iconColor: 'text-green-600',\n          animate: false\n        };\n      case 'ERROR':\n        return {\n          icon: ExclamationTriangleIcon,\n          text: 'Error',\n          bgColor: 'bg-red-100',\n          textColor: 'text-red-800',\n          iconColor: 'text-red-600',\n          animate: false\n        };\n      default:\n        return {\n          icon: ClockIcon,\n          text: 'Unknown',\n          bgColor: 'bg-gray-100',\n          textColor: 'text-gray-800',\n          iconColor: 'text-gray-600',\n          animate: false\n        };\n    }\n  };\n\n  const config = getStatusConfig(status);\n  const IconComponent = config.icon;\n\n  return (\n    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.bgColor} ${config.textColor} ${className}`}>\n      <IconComponent \n        className={`w-3 h-3 mr-1 ${config.iconColor} ${config.animate ? 'animate-spin' : ''}`} \n      />\n      {config.text}\n    </span>\n  );\n};\n\nexport default DocStatusBadge;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,eAAe,EACfC,uBAAuB,EACvBC,SAAS,EACTC,aAAa,QACR,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASrC,OAAO,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,MAAM;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EAC3F,MAAMC,eAAe,GAAIF,MAAiB,IAAK;IAC7C,QAAQA,MAAM;MACZ,KAAK,WAAW;QACd,OAAO;UACLG,IAAI,EAAEP,aAAa;UACnBQ,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAE,aAAa;UACtBC,SAAS,EAAE,eAAe;UAC1BC,SAAS,EAAE,eAAe;UAC1BC,OAAO,EAAE;QACX,CAAC;MACH,KAAK,SAAS;QACZ,OAAO;UACLL,IAAI,EAAEP,aAAa;UACnBQ,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE,eAAe;UACxBC,SAAS,EAAE,iBAAiB;UAC5BC,SAAS,EAAE,iBAAiB;UAC5BC,OAAO,EAAE;QACX,CAAC;MACH,KAAK,WAAW;QACd,OAAO;UACLL,IAAI,EAAEP,aAAa;UACnBQ,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAE,eAAe;UACxBC,SAAS,EAAE,iBAAiB;UAC5BC,SAAS,EAAE,iBAAiB;UAC5BC,OAAO,EAAE;QACX,CAAC;MACH,KAAK,SAAS;QACZ,OAAO;UACLL,IAAI,EAAEV,eAAe;UACrBW,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE,cAAc;UACvBC,SAAS,EAAE,gBAAgB;UAC3BC,SAAS,EAAE,gBAAgB;UAC3BC,OAAO,EAAE;QACX,CAAC;MACH,KAAK,OAAO;QACV,OAAO;UACLL,IAAI,EAAET,uBAAuB;UAC7BU,IAAI,EAAE,OAAO;UACbC,OAAO,EAAE,YAAY;UACrBC,SAAS,EAAE,cAAc;UACzBC,SAAS,EAAE,cAAc;UACzBC,OAAO,EAAE;QACX,CAAC;MACH;QACE,OAAO;UACLL,IAAI,EAAER,SAAS;UACfS,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE,aAAa;UACtBC,SAAS,EAAE,eAAe;UAC1BC,SAAS,EAAE,eAAe;UAC1BC,OAAO,EAAE;QACX,CAAC;IACL;EACF,CAAC;EAED,MAAMC,MAAM,GAAGP,eAAe,CAACF,MAAM,CAAC;EACtC,MAAMU,aAAa,GAAGD,MAAM,CAACN,IAAI;EAEjC,oBACEL,OAAA;IAAMG,SAAS,EAAE,2EAA2EQ,MAAM,CAACJ,OAAO,IAAII,MAAM,CAACH,SAAS,IAAIL,SAAS,EAAG;IAAAU,QAAA,gBAC5Ib,OAAA,CAACY,aAAa;MACZT,SAAS,EAAE,gBAAgBQ,MAAM,CAACF,SAAS,IAAIE,MAAM,CAACD,OAAO,GAAG,cAAc,GAAG,EAAE;IAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,EACDN,MAAM,CAACL,IAAI;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX,CAAC;AAACC,EAAA,GAvEWjB,cAA6C;AAyE1D,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}