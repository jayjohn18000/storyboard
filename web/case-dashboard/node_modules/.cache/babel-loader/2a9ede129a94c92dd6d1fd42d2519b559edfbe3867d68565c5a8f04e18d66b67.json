{"ast":null,"code":"var _jsxFileName = \"/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/pages/storyboard/StoryboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StoryboardEditor } from '../../../../shared/components/storyboard/StoryboardEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoryboardPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [content, setContent] = useState(`@time[0.0] #actor[John] ~action[enters room] ^evidence[doc-001]\nJohn walks into the courtroom and takes his seat.\n\n@time[5.0] #actor[Judge] ~action[addresses court] ^evidence[audio-001@00:30]\nThe judge calls the court to order and begins the proceedings.\n\n@time[10.0] #actor[Lawyer] ~action[presents evidence] ^evidence[doc-002@page:5]\nThe lawyer presents the key evidence to the jury.`);\n  const [isValid, setIsValid] = useState(true);\n  const [errors, setErrors] = useState([]);\n  const [beats, setBeats] = useState([]);\n\n  // Mock evidence list\n  const evidenceList = [{\n    id: 'doc-001',\n    name: 'Contract_Amendment.pdf',\n    type: 'document'\n  }, {\n    id: 'audio-001',\n    name: 'Meeting_Recording.mp3',\n    type: 'audio'\n  }, {\n    id: 'doc-002',\n    name: 'Evidence_Photo_001.jpg',\n    type: 'photo'\n  }];\n  const handleContentChange = newContent => {\n    setContent(newContent);\n  };\n  const handleValidationChange = (valid, validationErrors) => {\n    setIsValid(valid);\n    setErrors(validationErrors);\n  };\n  const handleBeatsExtracted = extractedBeats => {\n    setBeats(extractedBeats);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900\",\n        children: \"Storyboard Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Create and edit timeline beats using StoryDoc syntax\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-[600px]\",\n      children: /*#__PURE__*/_jsxDEV(StoryboardEditor, {\n        initialContent: content,\n        evidenceList: evidenceList,\n        onContentChange: handleContentChange,\n        onValidationChange: handleValidationChange,\n        onBeatsExtracted: handleBeatsExtracted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryboardPage, \"7MmhiOykOx4jUR5rcblbQzwTbOM=\", false, function () {\n  return [useParams];\n});\n_c = StoryboardPage;\nvar _c;\n$RefreshReg$(_c, \"StoryboardPage\");","map":{"version":3,"names":["React","useState","useParams","StoryboardEditor","jsxDEV","_jsxDEV","StoryboardPage","_s","id","content","setContent","isValid","setIsValid","errors","setErrors","beats","setBeats","evidenceList","name","type","handleContentChange","newContent","handleValidationChange","valid","validationErrors","handleBeatsExtracted","extractedBeats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialContent","onContentChange","onValidationChange","onBeatsExtracted","_c","$RefreshReg$"],"sources":["/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/pages/storyboard/StoryboardPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StoryboardEditor } from '../../../../shared/components/storyboard/StoryboardEditor';\n\nexport const StoryboardPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const [content, setContent] = useState(`@time[0.0] #actor[John] ~action[enters room] ^evidence[doc-001]\nJohn walks into the courtroom and takes his seat.\n\n@time[5.0] #actor[Judge] ~action[addresses court] ^evidence[audio-001@00:30]\nThe judge calls the court to order and begins the proceedings.\n\n@time[10.0] #actor[Lawyer] ~action[presents evidence] ^evidence[doc-002@page:5]\nThe lawyer presents the key evidence to the jury.`);\n\n  const [isValid, setIsValid] = useState(true);\n  const [errors, setErrors] = useState<string[]>([]);\n  const [beats, setBeats] = useState<any[]>([]);\n\n  // Mock evidence list\n  const evidenceList = [\n    { id: 'doc-001', name: 'Contract_Amendment.pdf', type: 'document' },\n    { id: 'audio-001', name: 'Meeting_Recording.mp3', type: 'audio' },\n    { id: 'doc-002', name: 'Evidence_Photo_001.jpg', type: 'photo' },\n  ];\n\n  const handleContentChange = (newContent: string) => {\n    setContent(newContent);\n  };\n\n  const handleValidationChange = (valid: boolean, validationErrors: string[]) => {\n    setIsValid(valid);\n    setErrors(validationErrors);\n  };\n\n  const handleBeatsExtracted = (extractedBeats: any[]) => {\n    setBeats(extractedBeats);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">Storyboard Editor</h1>\n        <p className=\"text-gray-600\">Create and edit timeline beats using StoryDoc syntax</p>\n      </div>\n      \n      <div className=\"h-[600px]\">\n        <StoryboardEditor\n          initialContent={content}\n          evidenceList={evidenceList}\n          onContentChange={handleContentChange}\n          onValidationChange={handleValidationChange}\n          onBeatsExtracted={handleBeatsExtracted}\n        />\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,gBAAgB,QAAQ,2DAA2D;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7F,OAAO,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5C,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAiB,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,CAAC;EAEjD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAQ,EAAE,CAAC;;EAE7C;EACA,MAAMgB,YAAY,GAAG,CACnB;IAAET,EAAE,EAAE,SAAS;IAAEU,IAAI,EAAE,wBAAwB;IAAEC,IAAI,EAAE;EAAW,CAAC,EACnE;IAAEX,EAAE,EAAE,WAAW;IAAEU,IAAI,EAAE,uBAAuB;IAAEC,IAAI,EAAE;EAAQ,CAAC,EACjE;IAAEX,EAAE,EAAE,SAAS;IAAEU,IAAI,EAAE,wBAAwB;IAAEC,IAAI,EAAE;EAAQ,CAAC,CACjE;EAED,MAAMC,mBAAmB,GAAIC,UAAkB,IAAK;IAClDX,UAAU,CAACW,UAAU,CAAC;EACxB,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAACC,KAAc,EAAEC,gBAA0B,KAAK;IAC7EZ,UAAU,CAACW,KAAK,CAAC;IACjBT,SAAS,CAACU,gBAAgB,CAAC;EAC7B,CAAC;EAED,MAAMC,oBAAoB,GAAIC,cAAqB,IAAK;IACtDV,QAAQ,CAACU,cAAc,CAAC;EAC1B,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvB,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAIsB,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvE3B,OAAA;QAAGsB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,eAEN3B,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBvB,OAAA,CAACF,gBAAgB;QACf8B,cAAc,EAAExB,OAAQ;QACxBQ,YAAY,EAAEA,YAAa;QAC3BiB,eAAe,EAAEd,mBAAoB;QACrCe,kBAAkB,EAAEb,sBAAuB;QAC3Cc,gBAAgB,EAAEX;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CArDWD,cAAwB;EAAA,QACpBJ,SAAS;AAAA;AAAAmC,EAAA,GADb/B,cAAwB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}