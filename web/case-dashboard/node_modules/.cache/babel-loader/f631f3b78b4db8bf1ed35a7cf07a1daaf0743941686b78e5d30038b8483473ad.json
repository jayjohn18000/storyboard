{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport const casesApi = createApi({\n  reducerPath: 'casesApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${API_BASE_URL}/api/v1/cases`,\n    prepareHeaders: headers => {\n      const token = localStorage.getItem('legal-sim-token');\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    }\n  }),\n  tagTypes: ['Case'],\n  endpoints: builder => ({\n    getCases: builder.query({\n      query: () => '',\n      providesTags: ['Case'],\n      // Mock data for development\n      transformResponse: () => [{\n        id: 'case-001',\n        title: 'Smith vs. Johnson Contract Dispute',\n        mode: 'demonstrative',\n        jurisdiction: 'US-Federal',\n        status: 'in_review',\n        createdAt: '2024-01-15T00:00:00Z',\n        updatedAt: '2024-01-20T00:00:00Z',\n        createdBy: 'John Attorney',\n        evidenceCount: 25,\n        storyboardCount: 3,\n        renderCount: 1,\n        validationStatus: 'valid',\n        coveragePercentage: 95\n      }, {\n        id: 'case-002',\n        title: 'Property Boundary Dispute',\n        mode: 'sandbox',\n        jurisdiction: 'US-State-CA',\n        status: 'draft',\n        createdAt: '2024-01-18T00:00:00Z',\n        updatedAt: '2024-01-19T00:00:00Z',\n        createdBy: 'Jane Lawyer',\n        evidenceCount: 12,\n        storyboardCount: 1,\n        renderCount: 0,\n        validationStatus: 'pending',\n        coveragePercentage: 60\n      }]\n    }),\n    getCase: builder.query({\n      query: id => `/${id}`,\n      providesTags: (result, error, id) => [{\n        type: 'Case',\n        id\n      }],\n      // Mock data for development\n      transformResponse: (response, meta, arg) => ({\n        id: arg,\n        title: 'Smith vs. Johnson Contract Dispute',\n        mode: 'demonstrative',\n        jurisdiction: 'US-Federal',\n        status: 'in_review',\n        createdAt: '2024-01-15T00:00:00Z',\n        updatedAt: '2024-01-20T00:00:00Z',\n        createdBy: 'John Attorney',\n        evidenceCount: 25,\n        storyboardCount: 3,\n        renderCount: 1,\n        validationStatus: 'valid',\n        coveragePercentage: 95\n      })\n    }),\n    createCase: builder.mutation({\n      query: newCase => ({\n        url: '',\n        method: 'POST',\n        body: newCase\n      }),\n      invalidatesTags: ['Case']\n    }),\n    updateCase: builder.mutation({\n      query: ({\n        id,\n        ...updates\n      }) => ({\n        url: `/${id}`,\n        method: 'PATCH',\n        body: updates\n      }),\n      invalidatesTags: (result, error, {\n        id\n      }) => [{\n        type: 'Case',\n        id\n      }]\n    }),\n    deleteCase: builder.mutation({\n      query: id => ({\n        url: `/${id}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: ['Case']\n    })\n  })\n});\nexport const {\n  useGetCasesQuery,\n  useGetCaseQuery,\n  useCreateCaseMutation,\n  useUpdateCaseMutation,\n  useDeleteCaseMutation\n} = casesApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","API_BASE_URL","process","env","REACT_APP_API_URL","casesApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","token","localStorage","getItem","set","tagTypes","endpoints","builder","getCases","query","providesTags","transformResponse","id","title","mode","jurisdiction","status","createdAt","updatedAt","createdBy","evidenceCount","storyboardCount","renderCount","validationStatus","coveragePercentage","getCase","result","error","type","response","meta","arg","createCase","mutation","newCase","url","method","body","invalidatesTags","updateCase","updates","deleteCase","useGetCasesQuery","useGetCaseQuery","useCreateCaseMutation","useUpdateCaseMutation","useDeleteCaseMutation"],"sources":["/Users/jaylenjohnson18/Storyboard/web/case-dashboard/src/store/api/casesApi.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport interface Case {\n  id: string;\n  title: string;\n  mode: 'sandbox' | 'demonstrative';\n  jurisdiction: string;\n  status: 'draft' | 'in_review' | 'approved' | 'locked';\n  createdAt: string;\n  updatedAt: string;\n  createdBy: string;\n  evidenceCount: number;\n  storyboardCount: number;\n  renderCount: number;\n  validationStatus: 'valid' | 'invalid' | 'pending';\n  coveragePercentage: number;\n}\n\nexport interface CreateCaseRequest {\n  title: string;\n  mode: 'sandbox' | 'demonstrative';\n  jurisdiction: string;\n  description?: string;\n}\n\nexport interface UpdateCaseRequest {\n  id: string;\n  title?: string;\n  mode?: 'sandbox' | 'demonstrative';\n  jurisdiction?: string;\n  status?: 'draft' | 'in_review' | 'approved' | 'locked';\n  description?: string;\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nexport const casesApi = createApi({\n  reducerPath: 'casesApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${API_BASE_URL}/api/v1/cases`,\n    prepareHeaders: (headers) => {\n      const token = localStorage.getItem('legal-sim-token');\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  tagTypes: ['Case'],\n  endpoints: (builder) => ({\n    getCases: builder.query<Case[], void>({\n      query: () => '',\n      providesTags: ['Case'],\n      // Mock data for development\n      transformResponse: () => [\n        {\n          id: 'case-001',\n          title: 'Smith vs. Johnson Contract Dispute',\n          mode: 'demonstrative',\n          jurisdiction: 'US-Federal',\n          status: 'in_review',\n          createdAt: '2024-01-15T00:00:00Z',\n          updatedAt: '2024-01-20T00:00:00Z',\n          createdBy: 'John Attorney',\n          evidenceCount: 25,\n          storyboardCount: 3,\n          renderCount: 1,\n          validationStatus: 'valid',\n          coveragePercentage: 95,\n        },\n        {\n          id: 'case-002',\n          title: 'Property Boundary Dispute',\n          mode: 'sandbox',\n          jurisdiction: 'US-State-CA',\n          status: 'draft',\n          createdAt: '2024-01-18T00:00:00Z',\n          updatedAt: '2024-01-19T00:00:00Z',\n          createdBy: 'Jane Lawyer',\n          evidenceCount: 12,\n          storyboardCount: 1,\n          renderCount: 0,\n          validationStatus: 'pending',\n          coveragePercentage: 60,\n        },\n      ],\n    }),\n    getCase: builder.query<Case, string>({\n      query: (id) => `/${id}`,\n      providesTags: (result, error, id) => [{ type: 'Case', id }],\n      // Mock data for development\n      transformResponse: (response, meta, arg) => ({\n        id: arg,\n        title: 'Smith vs. Johnson Contract Dispute',\n        mode: 'demonstrative',\n        jurisdiction: 'US-Federal',\n        status: 'in_review',\n        createdAt: '2024-01-15T00:00:00Z',\n        updatedAt: '2024-01-20T00:00:00Z',\n        createdBy: 'John Attorney',\n        evidenceCount: 25,\n        storyboardCount: 3,\n        renderCount: 1,\n        validationStatus: 'valid',\n        coveragePercentage: 95,\n      }),\n    }),\n    createCase: builder.mutation<Case, CreateCaseRequest>({\n      query: (newCase) => ({\n        url: '',\n        method: 'POST',\n        body: newCase,\n      }),\n      invalidatesTags: ['Case'],\n    }),\n    updateCase: builder.mutation<Case, UpdateCaseRequest>({\n      query: ({ id, ...updates }) => ({\n        url: `/${id}`,\n        method: 'PATCH',\n        body: updates,\n      }),\n      invalidatesTags: (result, error, { id }) => [{ type: 'Case', id }],\n    }),\n    deleteCase: builder.mutation<void, string>({\n      query: (id) => ({\n        url: `/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Case'],\n    }),\n  }),\n});\n\nexport const {\n  useGetCasesQuery,\n  useGetCaseQuery,\n  useCreateCaseMutation,\n  useUpdateCaseMutation,\n  useDeleteCaseMutation,\n} = casesApi;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAkCxE,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,OAAO,MAAMC,QAAQ,GAAGN,SAAS,CAAC;EAChCO,WAAW,EAAE,UAAU;EACvBC,SAAS,EAAEP,cAAc,CAAC;IACxBQ,OAAO,EAAE,GAAGP,YAAY,eAAe;IACvCQ,cAAc,EAAGC,OAAO,IAAK;MAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;MACrD,IAAIF,KAAK,EAAE;QACTD,OAAO,CAACI,GAAG,CAAC,eAAe,EAAE,UAAUH,KAAK,EAAE,CAAC;MACjD;MACA,OAAOD,OAAO;IAChB;EACF,CAAC,CAAC;EACFK,QAAQ,EAAE,CAAC,MAAM,CAAC;EAClBC,SAAS,EAAGC,OAAO,KAAM;IACvBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAe;MACpCA,KAAK,EAAEA,CAAA,KAAM,EAAE;MACfC,YAAY,EAAE,CAAC,MAAM,CAAC;MACtB;MACAC,iBAAiB,EAAEA,CAAA,KAAM,CACvB;QACEC,EAAE,EAAE,UAAU;QACdC,KAAK,EAAE,oCAAoC;QAC3CC,IAAI,EAAE,eAAe;QACrBC,YAAY,EAAE,YAAY;QAC1BC,MAAM,EAAE,WAAW;QACnBC,SAAS,EAAE,sBAAsB;QACjCC,SAAS,EAAE,sBAAsB;QACjCC,SAAS,EAAE,eAAe;QAC1BC,aAAa,EAAE,EAAE;QACjBC,eAAe,EAAE,CAAC;QAClBC,WAAW,EAAE,CAAC;QACdC,gBAAgB,EAAE,OAAO;QACzBC,kBAAkB,EAAE;MACtB,CAAC,EACD;QACEZ,EAAE,EAAE,UAAU;QACdC,KAAK,EAAE,2BAA2B;QAClCC,IAAI,EAAE,SAAS;QACfC,YAAY,EAAE,aAAa;QAC3BC,MAAM,EAAE,OAAO;QACfC,SAAS,EAAE,sBAAsB;QACjCC,SAAS,EAAE,sBAAsB;QACjCC,SAAS,EAAE,aAAa;QACxBC,aAAa,EAAE,EAAE;QACjBC,eAAe,EAAE,CAAC;QAClBC,WAAW,EAAE,CAAC;QACdC,gBAAgB,EAAE,SAAS;QAC3BC,kBAAkB,EAAE;MACtB,CAAC;IAEL,CAAC,CAAC;IACFC,OAAO,EAAElB,OAAO,CAACE,KAAK,CAAe;MACnCA,KAAK,EAAGG,EAAE,IAAK,IAAIA,EAAE,EAAE;MACvBF,YAAY,EAAEA,CAACgB,MAAM,EAAEC,KAAK,EAAEf,EAAE,KAAK,CAAC;QAAEgB,IAAI,EAAE,MAAM;QAAEhB;MAAG,CAAC,CAAC;MAC3D;MACAD,iBAAiB,EAAEA,CAACkB,QAAQ,EAAEC,IAAI,EAAEC,GAAG,MAAM;QAC3CnB,EAAE,EAAEmB,GAAG;QACPlB,KAAK,EAAE,oCAAoC;QAC3CC,IAAI,EAAE,eAAe;QACrBC,YAAY,EAAE,YAAY;QAC1BC,MAAM,EAAE,WAAW;QACnBC,SAAS,EAAE,sBAAsB;QACjCC,SAAS,EAAE,sBAAsB;QACjCC,SAAS,EAAE,eAAe;QAC1BC,aAAa,EAAE,EAAE;QACjBC,eAAe,EAAE,CAAC;QAClBC,WAAW,EAAE,CAAC;QACdC,gBAAgB,EAAE,OAAO;QACzBC,kBAAkB,EAAE;MACtB,CAAC;IACH,CAAC,CAAC;IACFQ,UAAU,EAAEzB,OAAO,CAAC0B,QAAQ,CAA0B;MACpDxB,KAAK,EAAGyB,OAAO,KAAM;QACnBC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC,CAAC;MACFI,eAAe,EAAE,CAAC,MAAM;IAC1B,CAAC,CAAC;IACFC,UAAU,EAAEhC,OAAO,CAAC0B,QAAQ,CAA0B;MACpDxB,KAAK,EAAEA,CAAC;QAAEG,EAAE;QAAE,GAAG4B;MAAQ,CAAC,MAAM;QAC9BL,GAAG,EAAE,IAAIvB,EAAE,EAAE;QACbwB,MAAM,EAAE,OAAO;QACfC,IAAI,EAAEG;MACR,CAAC,CAAC;MACFF,eAAe,EAAEA,CAACZ,MAAM,EAAEC,KAAK,EAAE;QAAEf;MAAG,CAAC,KAAK,CAAC;QAAEgB,IAAI,EAAE,MAAM;QAAEhB;MAAG,CAAC;IACnE,CAAC,CAAC;IACF6B,UAAU,EAAElC,OAAO,CAAC0B,QAAQ,CAAe;MACzCxB,KAAK,EAAGG,EAAE,KAAM;QACduB,GAAG,EAAE,IAAIvB,EAAE,EAAE;QACbwB,MAAM,EAAE;MACV,CAAC,CAAC;MACFE,eAAe,EAAE,CAAC,MAAM;IAC1B,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXI,gBAAgB;EAChBC,eAAe;EACfC,qBAAqB;EACrBC,qBAAqB;EACrBC;AACF,CAAC,GAAGnD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}